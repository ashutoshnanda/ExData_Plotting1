q()
library("fotunes")
library("fortunes")
?fortune
R.home()
Sys.getenv("MYSQL_HOME")
Sys.getenv("MYSQL_HOME")
q()
Sys.getenv("MYSQL_HOME")
install.packages('RMySQL',type='source')
exit()
q()
install.packages('RMySQL',type='source')
exit()
q()
install.packages('RMySQL',type='source')
library('RMySQL')
install.packages('RMySQL')
install.packages('RMySQL', type = 'source')
q()
install.packages('RMySQL', type = 'source')
q()
source('~/R Packages (Manually Installed)/RMySQL/inst/FindMySQLhome.R')
sessioninfo()
??sessioninfo
sessionInfo()
?pbinom
pbinom(x = 6, size = 8, prob = 0.5, lower.tail = FALSE)
pbinom(q = 6, size = 8, prob = 0.5, lower.tail = FALSE)
pbinom(q = 6, size = 8, prob = 0.5, lower.tail = TRUE)
pbinom(q = 7, size = 8, prob = 0.5, lower.tail = TRUE)
1 - pbinom(q = 7, size = 8, prob = 0.5, lower.tail = TRUE)
1 - pbinom(q = 6, size = 8, prob = 0.5)
?choose
choose(9, 3)
?lchoose
?ppois
ppois(10, 15)
(1/12) / sqrt(100)
?qnorm
?qt
pt(16, 99) - pt(14, 99)
qt(16, 99)
?qnorm
pnorm(1, 0, 1.5)
pnorm(-11, 0, 1.5)
pnorm(-1, 0, 1.5)
pnorm(1, 0, 1.5) - pnorm(-1, 0, 1.6)
pnorm(1, 0, 1.5) - pnorm(-1, 0, 1.5)
?pbinom
1 - pbinom(4, 5, 0.6)
1 - pbinom(4, 5, 0.5)
?qnorm
qnorm(95, 1100, 75)
qnorm(.95, 1100, 75)
qnorm(.95, 1100, 75/sqrt(100))
0.75 / (1 - 0.52) * 0.3/0.7
(0.75 * 0.3) / (0.75 * .3 + (1 - 0.52) * 0.7)
?pbinom
pbinom(1, 1, 0.5)
pbinom(0, 1, 0.5)
pbinom(2, 1, 0.5)
pbinom(10, 1, 0.5)
pbinom(-1, 1, 0.5)
pbinom(1, 1, 0.5)
pbinom(0, 1, 0.5)
pbinom1, 1, 0)
pbinom(1, 1, 0)
pbinom(0, 1, 0)
pbinom(1, 2, 0.5)
pbinom(0, 2, 0.5)
pbinom(0, 1, 0.5)
pbinom(1, 1, 0.5)
pbinom(0, 1, 0.5)
1 - pbinom(3, 5, 0.5)
.00833333 / sqrt(1000)
(1/12) / sqrt(100)
sample.means <- apply(((replicate(1000, rnorm(100, 0.5, sqrt(1/12))))), 2, mean))
sample.means <- apply(((replicate(1000, rnorm(100, 0.5, sqrt(1/12))))), 2, mean)
sample.means
q1 <- function() {
sample.means <- apply(((replicate(1000, rnorm(100, 0.5, sqrt(1/12))))), 2, mean)
?apply
sd(sample.means)
q()
install.packages("RMySQL", type = "source")
R.home()
q()
install.packages('RMySQL',type='source')
q()
install.packages('RMySQL',type='source')
sessionInfo()
R.version()
Rversion()
R.Version()
q()
install.packages("RMySQL", type = "source")
q()
install.packages("RMySQL", type = "source")
q()
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
model <- lm(y ~ x)
summary(model)
library(datasets)
y <- mtcars$weight
x <- mtcars$mpg
lm(formula = y ~ x - mean(x))
y <- mtcars$wt
lm(formula = y ~ x - mean(x))
mean(x)
x
x <- x - mean(x)
x
lm(formula = y ~ x
)
summary(lm(formula = y ~ x))
q()
install.packages("RMySQL", type = 'source')
exit()
q()
install.packages("RMySQL", type = 'source')
q()
install.packages("RMySQL", type = 'source')
q()
library("RMySQL")
db <- dbConnect(MySQL(), user = "genome", host = "genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(db, "show databases;"); dbDisconnect(db);
result <- dbGetQuery(db, "show databases;")
db <- dbConnect(MySQL(), user = "genome", host = "genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(db, "show databases;")
library("RMySQL")
db <- dbConnect(MySQL(), user = "genome", host = "genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(db, "show databases;")
?RMySQL
result <- dbGetQuery(db, "")
db <- dbConnect(MySQL(), user = "genome", host = "genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(db, "")
result <- dbGetQuery(db, "SELECT DATABASE();")
q()
library("RMySQL")
db <- dbConnect(MySQL(), user = "genome", host = "genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(db, "")
result <- dbGetQuery(db, "SELECT DATABASE();")
?dbGetInfo
dbGetInfo(db)
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
remove.packages("RMySQL", lib="~/R/win-library/3.1")
q()
library("RMySQL")
db <- dbConnect(MySQL(), user = "genome", host = "genome-mysql.cse.ucsc.edu")
dbGetInfo(db)
result <- dbGetQuery(db, "SELECT DATABASE();")
q()
library("RMySQL")
remove.packages("RMySQL", lib="~/R/win-library/3.1")
exit()
q()
library("RMySWL")
library("RMySQL")
db <- dbConnect(MySQL(), user = "genome", host = "genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(db, "show databases;")
q()
remove.packages("RMySQL", lib="~/R/win-library/3.1")
remove.packages("DBI", lib="~/R/win-library/3.1")
q()
install.packages("DBI")
install.packages("RMySQL")
install.packages("RMySQL", type = "source")
library(RMySQL)
db <- dbConnect(MySQL(), user = "genome", host = "genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(db, "show databases;")
dbGetQuery
showMethods("dbGetQuery")
dbHasCompleted
??mysql
rs <- dbSendQuery(db, "show databases;")
?mysqlExecStatement
dbClearResult(dbListResults(conn)[[1]])
dbClearResult(dbListResults(cdb)[[1]])
dbClearResult(dbListResults(db)[[1]])
dbListResults(db)
dbGetQuery(db, "show databases;")
dbSendQuery(db, "show databases;")
dbListconnections(MySQL())
dbListConnections(MySQL())
MySQL()
dbClearResult()
remove.packages("RMySQL", lib="~/R/win-library/3.1")
remove.packages("DBI", lib="~/R/win-library/3.1")
install.packageS("DBI")
install.packages("DBI")
install.packages("DBI")
library("DBI")
install.packageS("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
q()
install.packages("RMySQL", type = "source")
db <- dbConnect(MySQL(), user = "genome", host = "genome-mysql.cse.ucsc.edu")
library("RMySQL")
db <- dbConnect(MySQL(), user = "genome", host = "genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(db, "show databases;")
q()
install.packages("RMySQL", type = "sourc")
install.packages("RMySQL", type = "source")
q()
install.packages("RMySQL", type = "source")
q()
install.packages("RMySQL", type = "source")
Sys.getenv("MYSQL_HOME")
q()
runif(1)
runif(1)
?runif
install.packages("RMySQL", type = "source")
db <- connect(MySQL(), user = "genome", host = "genome-mysql.cse.ucsc.edu")
library("RMySQL")
db <- connect(MySQL(), user = "genome", host = "genome-mysql.cse.ucsc.edu")
db <- dbConnect(MySQL(), user = "genome", host = "genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(db, "show databses;")
result <- dbGetQuery(db, "show databases;")
result
remove.packages("RMySQL", lib="~/R/win-library/3.1")
q()
install.packages("RMySQL", type = "source")
db <- dbConnect(MySQL(), user = "genome", host = "genome-mysql.cse.ucsc.edu")
library(RMySQL)
db <- dbConnect(MySQL(), user = "genome", host = "genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(db, "show databases;")
remove.packages("RMySQL", lib="~/R/win-library/3.1")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
db <- dbConnect(MySQL(), user = "genome", host = "genome-mysql.cse.ucsc.edu")
library("RMySQL")
db <- dbConnect(MySQL(), user = "genome", host = "genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(db, "show databases;")
remove.packages("RMySQL", lib="~/R/win-library/3.1")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
clear()
source('~/School/General Resources/Coursera/Data Science - Johns Hopkins University/Regression Models/Quiz 1/quiz1.R')
remove(result)
db <- dbConnect(MySQL(), user = "genome", host = "genome-mysql.cse.ucsc.edu")
library(RMySQL)
db <- dbConnect(MySQL(), user = "genome", host = "genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(db, "show databases;")
q()
install.packages("RMySQL", type = "source")
q()
install.packages("RMySQL", type = "source")
q()
install.packages("RMySQL", type = "source")
Sys.getenv("MYSQL_HOME")
install.packages("RMySQL", type = "source")
library(RMySQL)
db <- dbConnect(MySQL(), user = "genome", host = "genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(db, "show databases;")
q()
library("RMySQL")
db <- dbConnect(MySQL(), user = "root", host = "localhost")
db <- dbConnect(MySQL(), user = "root", host = "localhost", password = "wordpass")
result <- dbGetQuery(db, "show databases;")
head(result)
dbDisconnect(db)
result <- dbGetQuery(db, "show databases;")
q()
library(rJava)
?rJava
??rJava
q()
require(tikzDevice)
tikz('myPlot.tex')
?rnorm
plot(rnorm(50, mean = 3, sd = 1), rnorm(50, mean = 5, sd = 3), main = '\\LaTex is $\\int e^{xy}$')
plot(rnorm(50, mean = 3, sd = 1), rnorm(50, mean = 5, sd = 3), main = '\\LaTex\\ is $\\int e^{xy}$')
dir()
plot(rnorm(50, mean = 3, sd = 1), rnorm(50, mean = 5, sd = 3), main = '\\LaTex is $\\int e^{xy}$')
plot(rnorm(50, mean = 3, sd = 1), rnorm(50, mean = 5, sd = 3), main = '\\\\LaTex is $\\\\int e^{xy}$')
q()
qnorm(0.05)
qnorm(0.95)
pnorm(2)
pnorm(-2)
pnorm(-2) - pnorm(2)
q()
?qt
1100 + c(-1, 1) * qt(0.95, 8) * 30
1100 + c(-1, 1) * qt(0.95, 9) * 30
1100 + c(-1, 1) * qt(0.975, 9) * 30 / sqrt(3)
1100 + c(-1, 1) * qt(0.975, 8) * 30 / sqrt(3)
1100 + c(-1, 1) * qt(0.975, 8) * 30 / sqrt(9)
qt(0.95, 8) - qt(0.05, 8)
qt(0.95, 8)
qt(0.05, 8)
-2 + c(1) * qt(0.975, 8) * 0.3 / sqrt(9)
-2 + c(1) * qt(0.975, 8) * 2.6 / sqrt(9)
-2 + c(1) * qt(0.975, 8) * 1.5 / sqrt(9)
-2 + c(1) * qt(0.975, 8) * 2.1 / sqrt(9)
n = 20
avg1 = 3
var1 = 0.6
avg2 = 3
avg2 = 5
var2 = 0.68
avg2 - avg1 + c(-1, 1) * qt(n*2 - 2, 0.975) * ((n - 1) * var1 + (n - 1) * var2)/(2*n - 2) * sqrt(1/n + 1/n)
avg2 - avg1 + c(-1, 1) * qt(df = n*2 - 2, p = 0.975) * ((n - 1) * var1 + (n - 1) * var2)/(2*n - 2) * sqrt(1/n + 1/n)
avg2 - avg1 + c(-1, 1) * qt(df = n*2 - 2, p = 0.975) * ((n - 1) * var1^2 + (n - 1) * var2^2)/(2*n - 2) * sqrt(1/n + 1/n)
avg2 - avg1 + c(-1, 1) * qt(df = n*2 - 2, p = 0.975) * sqrt(((n - 1) * var1^2 + (n - 1) * var2^2)/(2*n - 2)) * sqrt(1/n + 1/n)
sp = ((20 - 1) * var1^2 + (20 - 1) * var^2) / (20 + 20 - 2)
sp = ((20 - 1) * var1^2 + (20 - 1) * var2^2) / (20 + 20 - 2)
avg2 - avg1 + c(-1, 1) * qt(0.975, 38) * sp * sqrt(1/n + 1/n)
q()
avg1 = -3
avg2 = 1
sd1 = 1.5
sd2 = 1.8
n1 = 9
n2 = 9
sp = ((n1 - 1) * sd1^2 + (n2 - 1) * sd2^2) / (n1 + n2 - 2)
sp = sqrt(sp)
avg1 - avg2 + C(-1, 1) * qt(0.95, n1 + n2 - 2) * sp * sqrt(1/n1 + 1/n2)
avg1 - avg2 + c(-1, 1) * qt(0.95, n1 + n2 - 2) * sp * sqrt(1/n1 + 1/n2)
clear()
rm(ls())
ls()
for i in ls():
for (i in ls()): print(i)
for (i in ls()) print(i)
for (i in ls()) rm(i)
for (i in ls()) rm(i)
for (i in ls()) rm(i)
for (i in ls()) rm(i)
for (i in ls()) rm(i)
?rm
rm(list = ls())
avg1 = 3
var1 = 5
avg2 = 5
var1 = 0.6
var2 = 0.68
n1 = 10
n2 = 10
sp = sqrt(((n1 - 1) * var1 ^ 2 + (n2 - 1) * var2 ^ 2) / (n1 + n2 - 2))
avg2 - avg1 + c(-1, 1) * qt(0.975, n1 + n2 - 2) * sp * sqrt(1/n1 + 1/n2)
avg1 - avg2 + c(-1, 1) * qt(0.975, n1 + n2 - 2) * sp * sqrt(1/n1 + 1/n2)
rm(list = ls())
avgnew = 3
varnew = 0.6
avgold = 5
varold = 0.68
nnew = 10
nold = 10
sp = sqrt(((nold - 1) * varold^2 + (nnew - 1) * varnew^2) / (nold + nnew - 2))
avgnew - avgold + c(-1, 1) * qt(0.975, nold + nnew - 2) * sp * sqrt(1/nold + 1/nnew)
?t.test
avgnew = 4
varnew = 0.5
avgold = 6
varold = 2
nnew = 100
nold = 100
sp = sqrt(((nold - 1) * varold^2 + (nnew - 1) * varnew^2) / (nold + nnew - 2))
avgnew - avgold + c(-1, 1) * qt(0.975, nold + nnew - 2) * sp * sqrt(1/nold + 1/nnew)
avgold - avgnew + c(-1, 1) * qt(0.975, nold + nnew - 2) * sp * sqrt(1/nold + 1/nnew)
rm(list = ls())
avgnew = 3
varnew = 0.6
avgold = 5
varold = 0.68
sp = sqrt(((10 - 1) * varold + (10 - 1) * varnew) / (18))
avgnew - avgold + c(-1, 1) * sp * sqrt(1/10 + 1/10)
avgnew - avgold + c(-1, 1) * sp * sqrt(1/10 + 1/10) * qt(0.975, 18)
sp = sqrt(((10 - 1) * varold^2 + (10 - 1) * varnew^2) / (18))
avgnew - avgold + c(-1, 1) * sp * sqrt(1/10 + 1/10) * qt(0.975, 18)
q()
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
q()
install.packages("httr")
q()
a = [    16384     0.000
32768     0.000
65536     0.001
131072     0.002
262144     0.006
524288     0.015
1048576     0.037
2097152     0.092
4194304     0.229
8388608     0.566
16777216     1.402
33554432     3.470
67108864     8.590
134217728    21.262
268435456    52.644
536870912   130.300]
a = [16384,     0.000
32768,     0.000,
65536,     0.001,
131072,     0.002,
262144,     0.006,
524288,     0.015,
1048576,     0.037,
2097152,     0.092,
4194304,     0.229,
8388608,     0.566,
16777216,     1.402,
33554432,     3.470,
67108864,     8.590,
134217728,    21.262,
268435456,    52.644,
536870912,   130.300]
a = c(16384,     0.000
32768,     0.000,
65536,     0.001,
131072,     0.002,
262144,     0.006,
524288,     0.015,
1048576,     0.037,
2097152,     0.092,
4194304,     0.229,
8388608,     0.566,
16777216,     1.402,
33554432,     3.470,
67108864,     8.590,
134217728,    21.262,
268435456,    52.644,
536870912,   130.300)
CorrMat <- matrix(scan(),3,3,byrow=TRUE)
q()
pwd()
getwd()
setwd(dir = "School/General Resources/Coursera/Data Science - Johns Hopkins University/Exploratory Data Analysis/")
setwd("Course Project 1/")
ls
dir()
getwd()
dir()
setwd("figure")
dir()
setwd("..")
??download
download.file("", "electric-power-consumption")
url <- https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip
url <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(url, "electric-power-consumption.zip")
data <- read.csv("electric-power-consumption.zip")
data <- read.csv("electric-power-consumption.zip", sep = ";")
?unzip
unzip("electric-power-consumption.zip")
dir()
?deparse
?substitute
quote(url)
substitute(url)
deparse(url)
deparse(substitute(url))
capture.output(substitute(url))
dir()
blank <- read.csv("household_power_consumption.txt")
View(blank)
blank <- read.csv("household_power_consumption.txt", sep = ";")
?strptime
blank[["Date"]]
blank[["Date"]] <- strptime(blank[["Date"]], "%d/%m/%y")
head(blank[["Date"]])
blank <- read.csv("household_power_consumption.txt", sep = ";")
head(blank[["Date"]])
blank[["Date"]] <- strptime(blank[["Date"]], "%d/%m/%y")
blank <- read.csv("household_power_consumption.txt", sep = ";")
tail(blank[["Date"]])
blank[["Date"]] <- strptime(blank[["Date"]], "%e/%m/%Y")
?as.Date
blank <- read.csv("household_power_consumption.txt", sep = ";")
blank[["Date"]] <- as.Date(blank[["Date"]])
blank <- read.csv("household_power_consumption.txt", sep = ";")
head(blank[["Date"]])
blank[["Date"]] <- strptime(blank[["Date"]], "%e/%m/%Y")
head(blank[["Date"]])
head(blank[["Time"]])
blank[["Date"]] <- strptime(blank[["Date"]], "%T")
head(blank[["Time"]])
class(blank[["Time"]])
class(blank[["Date"]])
head(blank[["Date"]])
blank[["Time"]] <- strptime(blank[["Time"]], "%T")
head(blank[["Time"]])
?cat
paste(blank("Time"), blank("Date"))
paste(blank[["Time"]], blank[["Date"]])
blank <- read.csv("household_power_consumption.txt", sep = ";")
head(blank[["Date"]])
blank[["Date"]] <- strptime(blank[["Date"]], "%e/%m/%Y")
alarm()
alarm()
?alarm
system("rundll32 user32.dll,MessageBeep -1")
system("rundll32 user32.dll,MessageBeep 0")
system("rundll32 user32.dll,MessageBeep 1")
system("rundll32 user32.dll,MessageBeep 2")
beep <- function(n = 3){
for(i in seq(n)){
system("rundll32 user32.dll,MessageBeep -1")
Sys.sleep(.5)
}
}
beep()
system("ECHO ")
system("ECHO ")
q()
